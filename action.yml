name: Secure hadolint
description: |
  This action securely runs hadolint in a Docker container to lint Dockerfiles.
  It ensures compliance with [Dockerfile Best Practices][best_practices] and also lints Bash scripts within `RUN` instructions using [ShellCheck][shell_check].

  This action reduces security risks associated with software supply chain attacks, such as compromised third-party tools or tampered container images.
  To achieve this, it enforces strict container isolation, disables network connections, and drops unnecessary privileges.

  ## Usage

  ### Default

  ```yaml
    steps:
      - name: Secure hadolint
        uses: tmknom/secure-hadolint-action@v0
  ```

  ### Custom

  ```yaml
    steps:
      - name: Secure hadolint
        uses: tmknom/secure-hadolint-action@v0
        with:
          ignore: DL3000 DL3004
          failure-threshold: warning
  ```

inputs:
  ignore:
    required: false
    description: Space-separated list of hadolint rule codes to ignore.
  failure-threshold:
    default: info
    required: false
    description: Severity level (`error`, `warning`, `info`, `style`, `ignore`, or `none`) at which violations cause the action to fail.

runs:
  using: composite

  steps:
    - name: Install
      id: install
      env:
        IMAGE_REPOSITORY: hadolint/hadolint
        IMAGE_DIGEST: sha256:fff226bdf9ebcc08db47fb90ee144dd770120b35c2b1cbbb46e932a650cfe232 # 2.12.1
      run: |
        echo "::group::Install"
        set -x
        image="${IMAGE_REPOSITORY}@${IMAGE_DIGEST}"
        echo "image=${image}" >> "${GITHUB_OUTPUT}"
        docker pull "${image}"
      shell: bash

    - name: Show version
      env:
        IMAGE: ${{ steps.install.outputs.image }}
      run: |
        echo "::group::Show version"
        set -x
        docker run --interactive --rm --read-only --user 1111:1111 \
          --security-opt no-new-privileges --cap-drop all --network none \
          "${IMAGE}" hadolint --version
        echo "::endgroup::"
      shell: bash

    - name: Lint
      env:
        IMAGE: ${{ steps.install.outputs.image }}
        IGNORE: ${{ inputs.ignore }}
        FAILURE_THRESHOLD: ${{ inputs.failure-threshold }}
      run: |
        echo "::group::Lint"
        set -x
        declare -a flags=(--failure-threshold "${FAILURE_THRESHOLD}")
        if [[ "${IGNORE}" != "" ]]; then
          IFS=$' ' read -ra codes <<< "${IGNORE}"
          for code in "${codes[@]}"; do
            flags+=("--ignore" "${code}")
          done
        fi

        mapfile -t dockerfiles < <(find . -name 'Dockerfile')
        docker run --interactive --rm --read-only --user 1111:1111 \
          --security-opt no-new-privileges --cap-drop all --network none \
          --volume "${PWD}:${PWD}:ro" --workdir "${PWD}" \
          "${IMAGE}" hadolint "${flags[@]}" "${dockerfiles[@]}"
        echo "::endgroup::"
      shell: bash
